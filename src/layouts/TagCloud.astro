---
import { getCollection } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
import TagPill from "../components/TagPill.astro";

export interface Props {
  title: string;
  description: string;
  collection: string;
  header: string;
}
const { title, description, collection, header } = Astro.props;

const entries = await getCollection(collection as any);

const tags = [
  ...new Set(entries.map((post: any) => post.data.tags).flat()),
].sort();

// Calculate tag frequencies and create tag data with counts
const tagsWithCounts = tags
  .map((tag) => {
    const count = entries.filter((post: any) =>
      post.data.tags.includes(tag)
    ).length;
    return { name: tag, count };
  })
  .sort((a, b) => b.count - a.count); // Sort by frequency (highest first)
---

<BaseLayout title={title} description={description}>
  <div class="width-constrained-container column-container">
    <h1>{header}</h1>
    <hr />
    <div class="tag-cloud">
    {
      tagsWithCounts.map((tagData) => {
        return (
          <div class="tag-row surface-background-hover">
            <TagPill tag={tagData.name} parent={`/${collection}`} />
            <h3 class="text-meta">({tagData.count})</h3>
          </div>
        );
      })
    }
    </div>
</BaseLayout>

<style>
  .column-container {
    padding: 0 var(--gap-lg);
    gap: var(--gap-lg);
  }
  .tag-cloud {
    display: flex;
    flex-wrap: wrap;
    gap: var(--gap-md);
  }
  .tag-row {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: var(--gap-md);
    padding: var(--gap-md);
    border-radius: var(--corner-md);
  }
</style>
