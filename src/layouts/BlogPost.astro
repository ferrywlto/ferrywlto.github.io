---
import type { CollectionEntry } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import MainLayout from './MainLayout.astro';
type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, tags } = Astro.props;
---
<MainLayout title={title} description={description}>
	<style>
		.hero-image {
			width: 100%;
		}
		.hero-image img {
			display: block;
			margin: 0 auto;
			border-radius: var(--radius-md);
			box-shadow: var(--shadow-lg);
		}
		.prose {
			width: var(--container-xs);
			max-width: var(--max-width);
			color: var(--gray-dark);
		}
		.title {
			margin-bottom: var(--space-md);
			padding: var(--space-md) 0;
			line-height: 1;
		}
		.title h1 {
			margin: 0 0 var(--space-sm) 0;
		}
		.date {
			margin-bottom: var(--space-sm);
			color: var(--gray);
		}
		.last-updated-on {
			font-style: italic;
		}
		span > a { 
			text-decoration: none; 
			color: inherit;
		}
		.tags-container {
			display: flex;
			flex-wrap: wrap;
			gap: var(--space-sm);
			margin-top: var(--space-lg);
		}
	</style>
	<article>
		<div class="hero-image">
			{heroImage && <Image width={1020} height={510} src={heroImage} alt={description} loading="lazy" />}
		</div>
		<div class="prose margin-auto padding-md">
			<div class="title text-center">
				<div class="date">
					<FormattedDate date={pubDate} />
					{
						updatedDate && (
							<div class="last-updated-on">
								Last updated on <FormattedDate date={updatedDate} />
							</div>
						)
					}
				</div>
				<h1>{title}</h1>
				<hr />
			</div>
			<slot />
			<div class="tags-container">
			{tags && tags.map((tag: string) => 
				<a href={`/tags/${tag}`} class="badge badge-primary">#{tag}</a>
			)}
			</div>
		</div>
	</article>
</MainLayout>