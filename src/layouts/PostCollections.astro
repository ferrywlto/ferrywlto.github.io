---
import { getCollection } from "astro:content";
import PostPreview from "../components/PostPreview.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import type { TaggableCollection } from "../types";

export interface Props {
  collection: TaggableCollection;
  title: string;
  subtitle: string;
}
const { collection, title, subtitle } = Astro.props;

const posts = (await getCollection(collection)).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const firstPost = posts[0];
const remainingPosts = posts.slice(1);
---

<BaseLayout>
  <main class="column-container width-constrained-container">
    <h1>{title}</h1>
    <h2 class="text-item-title">{subtitle}</h2>
    <section>
      <div class="first-post">
        <PostPreview
          id={firstPost.id}
          title={firstPost.data.title}
          description={firstPost.data.description}
          pubDate={firstPost.data.pubDate}
          heroImage={firstPost.data.heroImage}
          linkPrefix={collection}
        />
      </div>
    </section>
    <section>
      <div class="remaining-posts">
        {
          remainingPosts.map((post) => (
            <PostPreview
              id={post.id}
              title={post.data.title}
              description={post.data.description}
              pubDate={post.data.pubDate}
              heroImage={post.data.heroImage}
              linkPrefix={collection}
            />
          ))
        }
      </div>
    </section>
  </main>
</BaseLayout>
<style>
  .column-container {
    padding: 0 var(--gap-lg);
    gap: var(--gap-lg);
  }

  .first-post {
    display: flex;
    width: 100%;
  }

  .remaining-posts {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--gap-lg);
  }
</style>
