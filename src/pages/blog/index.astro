---
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import HeroImage from "../../components/HeroImage.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

const posts = (await getCollection("blogs")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const firstPost = posts[0];
const remainingPosts = posts.slice(1, 10);
---

<BaseLayout>
  <main class="column-container width-constrained-container">
    <h1 class="text-section-title">Latest Blog Posts</h1>
    <section>
      <div class="first-post">
        <a href={`/blog/${firstPost.id}/`} class="block">
          <HeroImage
            src={firstPost.data.heroImage}
            alt={firstPost.data.description}
          />
          <h2 class="text-item-title">{firstPost.data.title}</h2>
          <p class="text-meta">
            <FormattedDate date={firstPost.data.pubDate} />
          </p>
        </a>
      </div>
    </section>
    <section>
      <div class="remaining-posts">
        {
          remainingPosts.map((post) => (
            <div class="remaining-post">
              <a href={`/blog/${post.id}/`} class="block">
                <HeroImage
                  src={post.data.heroImage}
                  alt={post.data.description}
                />
                <h2 class="text-item-title">{post.data.title}</h2>
                <p class="text-meta">
                  <FormattedDate date={post.data.pubDate} />
                </p>
              </a>
            </div>
          ))
        }
      </div>
    </section>
  </main>
</BaseLayout>
<style>
  @import "../../styles/typography.css";
  @import "../../styles/spacing.css";
  @import "../../styles/layout.css";

  .column-container {
    padding: 0 var(--gap-lg);
    gap: var(--gap-lg);
  }

  .first-post {
    display: flex;
    width: 100%;
  }

  .remaining-posts {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: var(--gap-lg);
  }
</style>
