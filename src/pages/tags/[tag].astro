---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import placeholderImg from '../../../public/blog-placeholder-about.jpg';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog');

  const tags = [
    ...new Set(allPosts.map((post: any) => post.data.tags).flat()),
  ];

  return tags.map((tag) => {
    const filteredPosts = allPosts.filter((post: any) =>
      post.data.tags.includes(tag)
    ).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`Posts tagged "${tag}" | ${SITE_TITLE}`} description={`All posts tagged with ${tag}`} />
		<style>
			main {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em 0;
			}
			
			.page-header {
				margin: 2rem 0;
				text-align: center;
			}
			
			h1 {
				color: rgb(var(--black));
				margin: 0 0 0.5rem 0;
				font-size: 2.369rem;
				line-height: 1.2;
			}
			
			.tag-info {
				color: rgb(var(--gray));
				font-size: 1.1rem;
				margin: 0;
			}
			
			.back-link {
				display: inline-block;
				color: rgb(var(--accent));
				text-decoration: none;
				margin-bottom: 2rem;
				font-weight: 500;
				transition: color 0.2s ease;
			}
			
			.back-link:hover {
				color: rgb(var(--accent-dark));
			}
			
			.posts-list {
				list-style: none;
				padding: 0;
				margin: 2rem 0;
			}
			
			.post-item {
				background: rgb(var(--gray-light), 0.3);
				border: 1px solid rgb(var(--gray-light));
				border-radius: 12px;
				margin-bottom: 1rem;
				transition: all 0.2s ease;
			}
			
			.post-item:hover {
				box-shadow: var(--box-shadow);
				transform: translateY(-2px);
				border-color: rgb(var(--accent));
			}
			
			.post-link {
				display: block;
				padding: 1.5rem;
				text-decoration: none;
				color: inherit;
			}
			
			.post-title {
				color: rgb(var(--black));
				font-size: 1.3rem;
				font-weight: 700;
				margin: 0 0 0.5rem 0;
				line-height: 1.3;
			}
			
			.post-date {
				color: rgb(var(--gray));
				font-size: 0.9rem;
				margin: 0;
			}
			
			.post-link:hover .post-title {
				color: rgb(var(--accent));
			}
			
			.empty-state {
				text-align: center;
				color: rgb(var(--gray));
				font-style: italic;
				margin: 3rem 0;
			}
			
			@media (max-width: 720px) {
				h1 {
					font-size: 1.8rem;
				}
				
				.page-header {
					margin: 1rem 0;
				}
				
				.post-link {
					padding: 1rem;
				}
				
				.post-title {
					font-size: 1.1rem;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<a href="/tags" class="back-link">‚Üê All Tags</a>
				
				<div class="page-header">
					<h1>#{tag}</h1>
					<p class="tag-info">{posts.length} {posts.length === 1 ? 'post' : 'posts'}</p>
				</div>
				
				{posts.length > 0 ? (
					<ul class="posts-list">
						{posts.map((post: any) => (
							<li class="post-item">
								<a href={`/blog/${post.id}/`} class="post-link">
									<h3 class="post-title">{post.data.title}</h3>
									<p class="post-date">
										<FormattedDate date={post.data.pubDate} />
									</p>
								</a>
							</li>
						))}
					</ul>
				) : (
					<p class="empty-state">No posts found with this tag.</p>
				)}
			</section>
		</main>
		<Footer />
	</body>
</html>
