---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from "astro:content";

const allPosts = await getCollection('blog');
const tags = [
  ...new Set(allPosts.map((post: any) => post.data.tags).flat()),
].sort();

// Calculate tag frequencies and create tag data with counts
const tagsWithCounts = tags.map(tag => {
  const count = allPosts.filter((post: any) => post.data.tags.includes(tag)).length;
  return { name: tag, count };
}).sort((a, b) => b.count - a.count); // Sort by frequency (highest first)

// Find min and max counts for scaling
const maxCount = Math.max(...tagsWithCounts.map(t => t.count));
const minCount = Math.min(...tagsWithCounts.map(t => t.count));

const pageTitle = "Tag Index";
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`${pageTitle} | ${SITE_TITLE}`} description={SITE_DESCRIPTION} />
		<style>
			/* Page-specific overrides using theme variables */
			main {
				width: var(--container-xs);
				max-width: var(--max-width);
				margin: auto;
				padding: var(--space-md) 0;
			}
			
			h1 {
				color: var(--black);
				margin: var(--space-xl) 0 var(--space-lg) 0;
				font-size: var(--text-4xl);
				line-height: 1.2;
			}
			
			.tags-grid {
				display: flex;
				flex-direction: column;
				gap: var(--space-md);
				margin: var(--space-xl) 0;
			}
			
			.tag-card {
				background: var(--gray-light-opacity-50);
				border: 1px solid var(--gray-light);
				border-radius: var(--radius-lg);
				padding: var(--space-lg);
				transition: var(--transition-normal);
				text-decoration: none;
				display: flex;
				justify-content: space-between;
				align-items: center;
				width: 100%;
			}
			
			.tag-card:hover {
				box-shadow: var(--shadow-md);
				transform: translateY(-2px);
				border-color: var(--accent);
			}
			
			.tag-name {
				color: var(--black);
				font-weight: 700;
				margin: 0;
				line-height: 1.2;
				flex: 1;
			}
			
			.tag-count {
				color: var(--gray);
				margin: 0;
				text-align: right;
				white-space: nowrap;
				line-height: 1.2;
			}
			
			.tag-card:hover .tag-name {
				color: var(--accent);
			}
			
			.tag-card:hover .tag-count {
				color: var(--accent-dark);
			}
			
			/* Size variations using theme variables */
			.tag-card.size-xs {
				padding: var(--space-md) var(--space-lg);
			}
			.tag-card.size-xs .tag-name { font-size: var(--text-base); }
			.tag-card.size-xs .tag-count { font-size: var(--text-xs); }
			
			.tag-card.size-sm {
				padding: calc(var(--space-md) * 1.2) var(--space-lg);
			}
			.tag-card.size-sm .tag-name { font-size: var(--text-lg); }
			.tag-card.size-sm .tag-count { font-size: var(--text-sm); }
			
			.tag-card.size-md .tag-name { font-size: var(--text-xl); }
			.tag-card.size-md .tag-count { font-size: var(--text-base); }
			
			.tag-card.size-lg {
				padding: var(--space-xl) var(--space-lg);
			}
			.tag-card.size-lg .tag-name { 
				font-size: var(--text-2xl);
				font-weight: 800;
			}
			.tag-card.size-lg .tag-count { font-size: var(--text-lg); }
			
			.tag-card.size-xl {
				padding: calc(var(--space-xl) * 1.25) var(--space-lg);
			}
			.tag-card.size-xl .tag-name { 
				font-size: var(--text-3xl);
				font-weight: 800;
			}
			.tag-card.size-xl .tag-count { font-size: var(--text-xl); }
			
			@media (max-width: 768px) {
				h1 {
					font-size: var(--text-3xl);
					margin: var(--space-md) 0;
				}
				
				.tag-card {
					padding: var(--space-md);
				}
				
				.tag-card.size-lg {
					padding: var(--space-lg);
				}
				
				.tag-card.size-xl {
					padding: var(--space-xl) var(--space-lg);
				}
				
				.tag-card.size-xl .tag-name {
					font-size: var(--text-2xl);
				}
				
				.tag-card.size-xl .tag-count {
					font-size: var(--text-base);
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<h1>{pageTitle}</h1>
				<div class="tags-grid">
					{tagsWithCounts.map((tagData) => {
						// Calculate size class based on frequency
						const ratio = maxCount > minCount ? (tagData.count - minCount) / (maxCount - minCount) : 0.5;
						let sizeClass = 'size-md';
						
						if (ratio >= 0.8) {
							sizeClass = 'size-xl';
						} else if (ratio >= 0.6) {
							sizeClass = 'size-lg';
						} else if (ratio >= 0.4) {
							sizeClass = 'size-md';
						} else if (ratio >= 0.2) {
							sizeClass = 'size-sm';
						} else {
							sizeClass = 'size-xs';
						}
						
						return (
							<a href={`/tags/${tagData.name}`} class={`tag-card ${sizeClass}`}>
								<h3 class="tag-name">{tagData.name}</h3>
								<p class="tag-count">{tagData.count} {tagData.count === 1 ? 'post' : 'posts'}</p>
							</a>
						);
					})}
				</div>
			</section>
		</main>
		<Footer />
	</body>
</html>