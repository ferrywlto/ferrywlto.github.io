---
import { getCollection } from 'astro:content';
import { render } from 'astro:content';
import Tweet from '../components/Tweet.astro';
import { SITE_TITLE } from '../consts';
import BaseLayout from '../layouts/BaseLayout.astro';

// Get all tweets and sort by date (newest first)
const allTweets = await getCollection('whispers');
const sortedTweets = allTweets.sort((a, b) =>
  b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Render content for each tweet
const tweetsWithContent = await Promise.all(
  sortedTweets.map(async (tweet) => {
    const { Content } = await render(tweet);
    return { tweet, Content };
  })
);

// Group tweets by date for better visual organization
const groupedTweets = tweetsWithContent.reduce((groups, { tweet, Content }) => {
  const dateKey = tweet.data.pubDate.toDateString();
  if (!groups[dateKey]) {
    groups[dateKey] = [];
  }
  groups[dateKey].push({ tweet, Content });
  return groups;
}, {} as Record<string, Array<{ tweet: any, Content: any }>>);

const title = `Whispers | ${SITE_TITLE}`;
const description = "A chronological timeline of thoughts, quotes, and quick notes from Ferry's daily journey.";
---

<BaseLayout title={title} description={description}>
  <div class="width-constrained-container column-container">
    <h1 class="text-item-title">
      Funny quotes from me and my wife. ðŸ˜€
    </h1>

    <div class="column-container timeline">
      {Object.entries(groupedTweets).map(([dateKey, tweets]) => (
        <section class="column-container timeline-day-item">
          <h2 class="day-header text-meta">
            {
                new Date(dateKey).toLocaleDateString('en-UK', {
                    weekday: 'long',
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                })
            }
          </h2>

          {tweets.map(({ tweet, Content }) => (
            <Tweet tweet={tweet} Content={Content} />
          ))}
        </section>
      ))}
    </div>

    {tweetsWithContent.length === 0 && (
      <div class="text-body">
        No timeline entries yet. Check back soon! âœ¨
      </div>
    )}
  </div>
</MainLayout>

<style>
  .width-constrained-container {
    padding: 0 var(--gap-lg);
    gap: var(--gap-lg);
    box-sizing: border-box;
  }

  .timeline {
    margin-left: var(--gap-md);
    border-left: 1px solid var(--color-thread);
    padding: var(--gap-md);
    gap: var(--gap-md);
  }

  .timeline-day-item {
    gap: var(--gap-md);
  }

  /* Responsive design */
  @media (max-width: 1024px) {
  }
</style>
