---
import { getCollection } from 'astro:content';
import FormattedDate from '../../../components/FormattedDate.astro';
import BaseLayout from '../../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const allPosts = await getCollection('blogs');

  const allTags = [
    ...new Set(allPosts.map((post: any) => post.data.tags).flat()),
  ];

  return allTags.map((tag) => {
    const postsWithTag = allPosts.filter((post: any) =>
      post.data.tags.includes(tag)
    ).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
    return {
      params: { tag },
      props: { posts: postsWithTag },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const title = `Posts tagged with "${tag}"`;
const description = `A collection of blog posts tagged with "${tag}".`;
---

<BaseLayout title={title} description={description}>
  <section class="width-constrained-container column-container section-wrapper">
    <a href="/blogs/tags" class="text-small-link">‚Üê All Tags</a>

    <div>
      <div class="header-row text-body">
        <h1>{tag}</h1><span class="tag-info">{posts.length} {posts.length === 1 ? 'post' : 'posts'} found with this tag.</span>
      </div>

      {posts.length > 0 ? (
        <ul class="column-container post-list">
          {posts.map((post: any) => (
            <li class="surface-background-hover">
              <a href={`/blogs/${post.id}/`}>
                <div class="post-entry">
                  <FormattedDate date={post.data.pubDate} />
                  <h3>{post.data.title}</h3>
                </div>
              </a>
            </li>
          ))}
        </ul>
      ) : (
        <p>No posts found with this tag.</p>
      )}
    </div>
  </section>
</BaseLayout>
<style>
  .section-wrapper {
    padding: 0 var(--gap-lg);
    gap: var(--gap-lg);
  }
  .header-row {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: var(--gap-md);
  }
  .post-entry {
    display: grid;
    grid-template-columns: minmax(110px, max-content) minmax(0, auto);
    align-items: center;
    gap: var(--gap-md);
  }
  .surface-background-hover {
    border-radius: var(--corner-md);
  }

  @media screen and (max-width: 1024px) {
    .post-list {
      gap: var(--gap-md);
    }
    .header-row {
      flex-direction: column;
      align-items: flex-start;
    }
    .post-entry {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: 0;
    }
  }
</style>
